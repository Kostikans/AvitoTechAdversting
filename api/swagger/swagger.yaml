basePath: /
consumes:
- application/json
definitions:
  AddAdvertisingParamWrap:
    properties:
      cost:
        format: int64
        type: integer
        x-go-name: Cost
      description:
        description: max length 1000
        type: string
        x-go-name: Description
      name:
        description: max length 200
        type: string
        x-go-name: Name
      photos:
        description: max length 3
        items:
          type: string
        type: array
        x-go-name: Photos
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
  AddAdvertisingWrap:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        format: int64
        type: integer
        x-go-name: Data
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
  ErrorRequestWrap:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      error:
        type: string
        x-go-name: Err
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
  GetAdvertisingWrap:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        $ref: '#/definitions/GetAdvertisingWrapModel'
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
  GetAdvertisingWrapModel:
    properties:
      cost:
        format: int64
        type: integer
        x-go-name: Cost
      description:
        type: string
        x-go-name: Description
      mainPhoto:
        type: string
        x-go-name: MainPhoto
      name:
        type: string
        x-go-name: Name
      photos:
        items:
          type: string
        type: array
        x-go-name: Photos
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
  ListAdvertisingResponseWrap:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        items:
          $ref: '#/definitions/GetAdvertisingWrapModel'
        type: array
        x-go-name: Data
    type: object
    x-go-package: _/home/kostikan/GoBuilds/github.com/Kostikans/AvitoTechAdversting/docs
info:
  description: Swagger spec.
  title: Golang service API for Avito
  version: 1.0.0
paths:
  /api/v1/advertising:
    get:
      operationId: ListAdvertising
      parameters:
      - in: query
        name: sort
        type: string
        x-go-name: Sort
      - in: query
        name: desc
        type: boolean
        x-go-name: Desc
      responses:
        "200":
          $ref: '#/responses/ListAdvertising'
        "400":
          $ref: '#/responses/badrequest'
      tags:
      - advertising
    post:
      operationId: AddAdvertising
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/AddAdvertisingParamWrap'
      responses:
        "200": {}
        "201":
          $ref: '#/responses/AddAdvertising'
        "400":
          $ref: '#/responses/badrequest'
      tags:
      - advertising
  /api/v1/advertising/{id}:
    get:
      operationId: GetAdvertising
      parameters:
      - format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Body
      - in: query
        name: fields
        type: string
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/GetAdvertising'
        "400":
          $ref: '#/responses/badrequest'
        "404":
          $ref: '#/responses/notfound'
      tags:
      - advertising
produces:
- application/json
responses:
  AddAdvertising:
    schema:
      $ref: '#/definitions/AddAdvertisingWrap'
  GetAdvertising:
    schema:
      $ref: '#/definitions/GetAdvertisingWrap'
  ListAdvertising:
    schema:
      $ref: '#/definitions/ListAdvertisingResponseWrap'
  badrequest:
    description: invalid json or get parameters
    schema:
      $ref: '#/definitions/ErrorRequestWrap'
  notfound:
    description: data doesn't exist
    schema:
      $ref: '#/definitions/ErrorRequestWrap'
schemes:
- http
swagger: "2.0"
