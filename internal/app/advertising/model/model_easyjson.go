// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package advertisingModel

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(in *jlexer.Lexer, out *Page) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "currentPage":
			out.CurrentPage = int(in.Int())
		case "perPage":
			out.PerPage = int(in.Int())
		case "lastPage":
			out.LastPage = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(out *jwriter.Writer, in Page) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"currentPage\":"
		out.RawString(prefix[1:])
		out.Int(int(in.CurrentPage))
	}
	{
		const prefix string = ",\"perPage\":"
		out.RawString(prefix)
		out.Int(int(in.PerPage))
	}
	{
		const prefix string = ",\"lastPage\":"
		out.RawString(prefix)
		out.Int(int(in.LastPage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Page) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Page) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Page) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Page) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel(l, v)
}
func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(in *jlexer.Lexer, out *Links) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "next":
			out.NextUrl = string(in.String())
		case "prev":
			out.PrevUrl = string(in.String())
		case "last":
			out.Last = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(out *jwriter.Writer, in Links) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"next\":"
		out.RawString(prefix[1:])
		out.String(string(in.NextUrl))
	}
	{
		const prefix string = ",\"prev\":"
		out.RawString(prefix)
		out.String(string(in.PrevUrl))
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.String(string(in.Last))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Links) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Links) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Links) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Links) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel1(l, v)
}
func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(in *jlexer.Lexer, out *AdvertisingList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "list":
			if in.IsNull() {
				in.Skip()
				out.List = nil
			} else {
				in.Delim('[')
				if out.List == nil {
					if !in.IsDelim(']') {
						out.List = make([]Advertising, 0, 0)
					} else {
						out.List = []Advertising{}
					}
				} else {
					out.List = (out.List)[:0]
				}
				for !in.IsDelim(']') {
					var v1 Advertising
					(v1).UnmarshalEasyJSON(in)
					out.List = append(out.List, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "page":
			(out.Page).UnmarshalEasyJSON(in)
		case "links":
			(out.Links).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(out *jwriter.Writer, in AdvertisingList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"list\":"
		out.RawString(prefix[1:])
		if in.List == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.List {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"page\":"
		out.RawString(prefix)
		(in.Page).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"links\":"
		out.RawString(prefix)
		(in.Links).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertisingList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertisingList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertisingList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertisingList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel2(l, v)
}
func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(in *jlexer.Lexer, out *AdvertisingID) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "advertisingID":
			out.AdvID = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(out *jwriter.Writer, in AdvertisingID) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"advertisingID\":"
		out.RawString(prefix[1:])
		out.Int(int(in.AdvID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertisingID) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertisingID) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertisingID) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertisingID) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel3(l, v)
}
func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(in *jlexer.Lexer, out *AdvertisingAdd) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "photos":
			if in.IsNull() {
				in.Skip()
				out.Photos = nil
			} else {
				in.Delim('[')
				if out.Photos == nil {
					if !in.IsDelim(']') {
						out.Photos = make([]string, 0, 4)
					} else {
						out.Photos = []string{}
					}
				} else {
					out.Photos = (out.Photos)[:0]
				}
				for !in.IsDelim(']') {
					var v4 string
					v4 = string(in.String())
					out.Photos = append(out.Photos, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "cost":
			out.Cost = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(out *jwriter.Writer, in AdvertisingAdd) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	if len(in.Photos) != 0 {
		const prefix string = ",\"photos\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v5, v6 := range in.Photos {
				if v5 > 0 {
					out.RawByte(',')
				}
				out.String(string(v6))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"cost\":"
		out.RawString(prefix)
		out.Int(int(in.Cost))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AdvertisingAdd) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AdvertisingAdd) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AdvertisingAdd) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AdvertisingAdd) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel4(l, v)
}
func easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(in *jlexer.Lexer, out *Advertising) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "mainPhoto":
			out.MainPhoto = string(in.String())
		case "photos":
			if in.IsNull() {
				in.Skip()
				out.Photos = nil
			} else {
				in.Delim('[')
				if out.Photos == nil {
					if !in.IsDelim(']') {
						out.Photos = make([]string, 0, 4)
					} else {
						out.Photos = []string{}
					}
				} else {
					out.Photos = (out.Photos)[:0]
				}
				for !in.IsDelim(']') {
					var v7 string
					v7 = string(in.String())
					out.Photos = append(out.Photos, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "cost":
			out.Cost = int(in.Int())
		case "created":
			out.Created = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(out *jwriter.Writer, in Advertising) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"mainPhoto\":"
		out.RawString(prefix)
		out.String(string(in.MainPhoto))
	}
	if len(in.Photos) != 0 {
		const prefix string = ",\"photos\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v8, v9 := range in.Photos {
				if v8 > 0 {
					out.RawByte(',')
				}
				out.String(string(v9))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"cost\":"
		out.RawString(prefix)
		out.Int(int(in.Cost))
	}
	if in.Created != "" {
		const prefix string = ",\"created\":"
		out.RawString(prefix)
		out.String(string(in.Created))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Advertising) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Advertising) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC80ae7adEncodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Advertising) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Advertising) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC80ae7adDecodeGithubComKostikansAvitoTechadvertisingInternalAppAdvertisingModel5(l, v)
}
